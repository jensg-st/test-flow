functions:
- id: http-request
  image: gerke74/http-request:dev
  type: knative-workflow
states:

- id: get-bitcoin
  type: action
  log: get bitcoin price
  action:
    function: http-request
    input:
      method: GET
      url: https://blockchain.info/ticker
    # retrying if it doesn't work first time
    retries:
      max_attempts: 3
      delay: PT30S
      multiplier: 2.0
      codes: [".*"]
  # transform the reslt and only get the USD price
  # store it under value
  transform: 'jq({ value: .return[0].result.USD })'
  transition: p

- id: p
  type: parallel
  mode: and
  actions:
  - function: http-request
    input:
      method: GET
      url: https://v2.jokeapi.dev/joke/Any?blacklistFlags=nsfw,religious,political,racist,sexist,explicit&type=single
  - function: http-request
    input:
      method: POST
      url: https://httpbin.org/post
      headers:
        header1: jq(.value.symbol)
  # parallel function come back in a return array and not in return like single functions
  # the last state data is the response for the service
  transform:
    joke: jq(.return[0][0].result.joke)
    httpbin: jq(.return[1][0].result.headers)
    value: jq(.value)
  