functions:
- id: bash
  image: gerke74/bash:dev
  type: knative-workflow
- id: http
  image: gerke74/http-request:dev
  type: knative-workflow
- id: py
  image: gerke74/python:dev
  type: knative-workflow

states:

# validate starts ensures there is no invalid data coming in
- id: start
  type: validate
  schema:
    title: Provide Your Name
    type: object
    required: ["currency"]
    properties:
      currency:
        type: string
        enum: ["USD", "AUD", "EUR"]
      name:
        type: string
        title: Name
        description: Name of User
  transition: mybash

# basic bash. just returns whatever came in as `name` or "World" if not set
- id: mybash
  type: action
  action:
    function: bash
    input:
      files:
      commands:
      - command: echo "Hello jq(.name // "World")"
  transform: 'jq(. + { greeting: .return.bash[0].result } )'
  transition: python

# this state takes the script python.yaml.myscript.py which is automatically synced as workflow variable
- id: python
  type: action
  action:
    function: py
    files:
    - key: myscript.py
      scope: workflow
    input:
      commands:
      - command: python3 myscript.py
  transform: 'jq(. + { python: .return.python[0].result } )'
  transition: bitcoin

# fetches the value for bitcoin for the currency given
- id: bitcoin
  type: action
  log: getting jq(.currency)
  action:
    function: http
    input:
      method: GET
      url: https://blockchain.info/ticker
  transform:
    greeting: 'jq(.greeting)'
    python: jq(.python)
    bitcoin: 'jq(.currency as $c | .return[0].result[$c].last)'

    